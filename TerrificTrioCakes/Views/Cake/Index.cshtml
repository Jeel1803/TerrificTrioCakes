@using X.PagedList
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<TerrificTrioCakes.Models.DB.Cake>

@{
    ViewData["Title"] = "Cakes";
}

<h1 style="font-family:verdana; color:darkseagreen">Cakes</h1>

 @if (User.IsInRole("Admin") | User.IsInRole("Staff"))
{
    <p>
    <a asp-action="Create">Create New</a>
</p>
}


<div class="row justify-content-center search-products">
    <div class="col-12 col-md-10 col-lg-8">
        <form class="card card-sm" id="searchForm" action="/Cake/Index" method="get" autocomplete="off">
            <div class="card-body row no-gutters align-items-center">
                <div class="col-auto">
                    <i class="fas fa-search h4 text-body"></i>
                </div>
                <!--end of col-->
                <div class="col">
                    <input class="form-control form-control-lg form-control-borderless"  type="text" id="searchString" name="searchString"
                   autocomplete="off" onkeyup="XAjaxRequest(this.value);" placeholder="Search topics or keywords">
                </div>
                </br>
                            <div id="autoSuggestContainer" style="position:absolute;display:none;z-index:100;"></div>

                <!--end of col-->
                <div class="col-auto">
                    <button class="btn btn-lg btn-success" type="submit">Search</button>
                </div>
                <!--end of col-->
            </div>
        </form>
    </div>
    <!--end of col-->
</div>

<div class="row row-cols-1 row-cols-md-3 g-4 product-row products-page">
    @foreach(var item in Model)
    {
        <div class="col">
            <div class="card">
                <a asp-action="Details" asp-route-id="@item.Id">
                    <img src="~/images/@item.Image" class="card-img-top">                    
                </a>
                <div class="card-body text-center card-body-header">
                    <a asp-action="Details" asp-route-id="@item.Id">
                        <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                        <h6 class="card-title cake-cat">@Html.DisplayFor(modelItem => item.Categories.Name) Cake</h6>
                    </a>
                    @*<p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>*@
                    <p class="card-text">@Html.Raw(item.Description)</p>
                </div>
                <div class="card-body  d-flex justify-content-evenly card-body-footer">
                    <h6 class="card-title">$@Html.DisplayFor(modelItem => item.Price) <span class="currency">nzd</span></h6>
                    <a asp-controller="Cart" asp-action="Buy" asp-route-id="@item.Id" class="btn btn-primary">Add To Cart</a>                    
                </div>
            </div>
        </div>
    }
</div>

@*code for display number of pages *@
@Html.PagedListPager(Model, page => Url.Action("Index",
        new { Page = page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
    })

<nav aria-label="Page navigation example" class="products-pagination">
  <ul class="pagination justify-content-end">
    <li class="page-item disabled">
      <a class="page-link" href="#" tabindex="-1">Previous</a>
    </li>
    <li class="page-item"><a class="page-link" href="#">1</a></li>
    <li class="page-item"><a class="page-link" href="#">2</a></li>
    <li class="page-item"><a class="page-link" href="#">3</a></li>
    <li class="page-item">
      <a class="page-link" href="#">Next</a>
    </li>
  </ul>
</nav>


@*Javascript for the auto suggestion*@
<script type="text/javascript">
    function XAjaxRequest(searchString) {
        if (searchString.length < 1) {
            //clearing the textbox box to enter new search String
            document.getElementById("autoSuggestContainer").innerHTML = "";
            return;
        }
        var xmlhttp;
        xmlhttp = new XMLHttpRequest();
        var url = "/Cake/IndexAJAX?searchString=" + searchString;
        xmlhttp.open("GET", url, false); //opening connection
        xmlhttp.send(); //sending request to IndexAJAX method in the author controller
        document.getElementById("autoSuggestContainer").style.display = "block";
        //clearing the container each time to avoid the list of suggested output growing each time
        document.getElementById("autoSuggestContainer").innerHTML = "";
        var messageObject = JSON.parse(xmlhttp.responseText); //receiving the text response
        var autoSuggestions = "";

        for (var i = 0; i < messageObject.length; i++) {
            //code to display the block of the suggested output
            autoSuggestions +=
                "<input type=\"button\" value=\"" + messageObject[i].Name +"\" "
                + "onclick=\"document.getElementById('searchString').value = this.value; document.getElementById('searchForm').submit();\" "
                + "style =\"width: 280px\" />";
            autoSuggestions += "<br />";
        }
        //placing the clickable generated HTML buttons in the display div
        document.getElementById("autoSuggestContainer").innerHTML = autoSuggestions;
    }
</script>





@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsFeatured)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Categories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CakeIngredients)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src="~/images/@item.Image" width="60" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsFeatured)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Categories.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CakeIngredients)
            </td>
            <td>
                <a asp-controller="Cart" asp-action="Buy" asp-route-id="@item.Id" width="100" >Add to Cart </a> 
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
